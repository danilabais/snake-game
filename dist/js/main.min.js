class Canvas{constructor(t){this.element=document.createElement("canvas"),this.context=this.element.getContext("2d"),this.element.width=800,this.element.height=800,t.appendChild(this.element)}}class gameLoop{constructor(t,i){this.update=t,this.draw=i,this.config=new Config,this.animate=this.animate.bind(this),this.animate()}animate(){requestAnimationFrame(this.animate),++this.config.step<this.config.maxStep||(this.config.step=0,this.update(),this.draw())}}function getRandomInt(t,i){return Math.floor(Math.random()*(i-t)+t)}class Config{constructor(){this.step=0,this.maxStep=6,this.sizeCell=16,this.sizeBerry=6.4}}class Score{constructor(t,i=0){this.scoreBlock=document.querySelector(t),this.score=i,this.draw()}incScore(){this.score++,this.draw()}setToZero(){this.score=0,this.draw()}draw(){this.scoreBlock.innerHTML=this.score}}class Berry{constructor(t){this.x=0,this.y=0,this.canvas=t,this.config=new Config,this.randomPosition()}draw(t){t.beginPath(),t.fillStyle="red",t.arc(this.x+this.config.sizeCell/2,this.y+this.config.sizeCell/2,this.config.sizeBerry,0,2*Math.PI),t.fill()}randomPosition(){this.x=getRandomInt(0,this.canvas.element.width/this.config.sizeCell)*this.config.sizeCell,this.y=getRandomInt(0,this.canvas.element.height/this.config.sizeCell)*this.config.sizeCell}}class Snake{constructor(){this.config=new Config,this.x=160,this.y=160,this.dx=this.config.sizeCell,this.dy=0,this.tails=[],this.maxTails=10,this.directrion="right",this.control()}update(t,i,s){this.x+=this.dx,this.y+=this.dy,this.x<0?this.x=s.element.width-this.config.sizeCell:this.x>=s.element.width&&(this.x=0),this.y<0?this.y=s.element.height-this.config.sizeCell:this.y>=s.element.height&&(this.y=0),this.tails.unshift({x:this.x,y:this.y}),this.tails.length>this.maxTails&&this.tails.pop(),this.tails.forEach((s,e)=>{s.x===t.x&&s.y===t.y&&(this.maxTails++,i.incScore(),t.randomPosition());for(let h=e+1;h<this.tails.length;h++)s.x==this.tails[h].x&&s.y==this.tails[h].y&&(this.death(),i.setToZero(),t.randomPosition())})}draw(t){this.tails.forEach((i,s)=>{t.fillStyle=0==s?"#053800":s%2==0?"#00a738":"#00832c",t.fillRect(i.x,i.y,this.config.sizeCell,this.config.sizeCell)})}death(){this.x=160,this.y=160,this.dx=this.config.sizeCell,this.dy=0,this.tails=[],this.maxTails=3}control(){const t=["KeyW","ArrowUp"],i=["KeyA","ArrowLeft"],s=["KeyD","ArrowRight"],h=["KeyS","ArrowDown"];document.addEventListener("keydown",({code:n}=e)=>{t.includes(n)&&"down"!==this.directrion?(this.dy=-this.config.sizeCell,this.dx=0,this.directrion="top"):i.includes(n)&&"right"!==this.directrion?(this.dx=-this.config.sizeCell,this.dy=0,this.directrion="left"):h.includes(n)&&"top"!==this.directrion?(this.dy=this.config.sizeCell,this.dx=0,this.directrion="down"):s.includes(n)&&"left"!==this.directrion&&(this.dx=this.config.sizeCell,this.dy=0,this.directrion="right")})}}class Game{constructor(t){this.canvas=new Canvas(t),this.snake=new Snake,this.berry=new Berry(this.canvas),this.score=new Score(".score-count",0),new gameLoop(this.update.bind(this),this.draw.bind(this))}update(){this.snake.update(this.berry,this.score,this.canvas)}draw(){this.canvas.context.clearRect(0,0,this.canvas.element.width,this.canvas.element.height),this.snake.draw(this.canvas.context),this.berry.draw(this.canvas.context)}}new Game(document.querySelector(".game-canvas"));